x = "Long",
y = "Lat",
caption = "Source: Class A eyewitness accounts, BFRO database") +
scale_x_continuous(limits = c(min(avgs$long) - 10, max(avgs$long) + 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(min(avgs$lat) - 5, max(avgs$lat) + 5), expand = c(0, 0))
gganimate(final_map)
#devtools::install_github("dkahle/ggmap")
#devtools::install_github("thomasp85/gganimate@v0.1.1")
library(ggmap)
library(ggplot2)
library(gganimate)
library(gifski)
library(data.table)
library(sqldf)
library(lubridate)
register_google(key = "AIzaSyBQfWhxyD_6AUFnFoGRStFKJA4Hg_I2LbU")
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw_map <- get_map(location = c(lon = mean(raw$longitude),
lat = mean(raw$latitude)),
zoom = 4,
maptype = "satellite",
scale = "auto")
#
# ggmap(raw_map) +
#   geom_point(data=raw,
#              aes(raw$longitude,
#                  raw$latitude,
#                  color = factor(raw$classification)),
#              size = 0.3,
#              alpha = 0.5)
raw$year <- year(raw$date)
avgs <- sqldf("
SELECT
AVG(longitude) AS long,
AVG(latitude) AS lat,
year
FROM
raw
WHERE year > 1900 AND
classification = 'Class A'
GROUP BY year
")
# ggmap(raw_map) +
#   geom_point(data=avgs,
#              aes(avgs$long,
#                  avgs$lat,
#                  color = avgs$year),
#              size = 0.4,
#              alpha = 0.7)
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location over the past 100 years",
x = "Long",
y = "Lat",
caption = "Source: Class A eyewitness accounts, BFRO database") +
scale_x_continuous(limits = c(min(avgs$long) - 10, max(avgs$long) + 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(min(avgs$lat) - 2, max(avgs$lat) + 2), expand = c(0, 0))
gganimate(final_map)
giff <- gganimate(final_map)
magick::image_write(giff, path="bigfoot/images/map.gif")
giff <- gganimate(final_map)
anim_save("bigfoot/images/map.gif", giff)
save.gif <- image_animate(final_map, fps = 2)
image_write(save.gif, "output.gif")
gganimate(final_map, "bigfoot/data/output.gif")
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location over the past 100 years",
x = "Longitude",
y = "Latitude",
caption = "Source: Class A eyewitness accounts, BFRO database") +
scale_x_continuous(limits = c(min(avgs$long) - 10, max(avgs$long) + 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(min(avgs$lat) - 2, max(avgs$lat) + 2), expand = c(0, 0))
gganimate(final_map, "bigfoot/data/output.gif")
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location over the past 100 years",
x = "Longitude",
y = "Latitude",
caption = "Source: Class A eyewitness accounts, BFRO database") +
scale_x_continuous(limits = c(min(avgs$long) - 10, max(avgs$long) + 10), expand = c(0, 0)) +
scale_y_continuous(limits = c(min(avgs$lat) - 2, max(avgs$lat) + 2), expand = c(0, 0))
gganimate(final_map, "bigfoot/data/output.gif")
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location over the past 100 years",
subtitle = "{year}",
x = "Long", y = "Lat",
caption = "Data Source: jswater.jiangsu.gov.cn") +
gganimate(final_map)
#devtools::install_github("dkahle/ggmap")
#devtools::install_github("thomasp85/gganimate@v0.1.1")
library(ggmap)
library(ggplot2)
library(gganimate)
library(gifski)
library(data.table)
library(sqldf)
library(lubridate)
register_google(key = "AIzaSyBQfWhxyD_6AUFnFoGRStFKJA4Hg_I2LbU")
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw_map <- get_map(location = c(lon = mean(raw$longitude),
lat = mean(raw$latitude)),
zoom = 4,
maptype = "satellite",
scale = "auto")
#
# ggmap(raw_map) +
#   geom_point(data=raw,
#              aes(raw$longitude,
#                  raw$latitude,
#                  color = factor(raw$classification)),
#              size = 0.3,
#              alpha = 0.5)
raw$year <- year(raw$date)
avgs <- sqldf("
SELECT
AVG(longitude) AS long,
AVG(latitude) AS lat,
year
FROM
raw
WHERE year > 1900 AND
classification = 'Class A'
GROUP BY year
")
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location over the past",
subtitle = "Time:{frame_time}",
x = "Longitude", y = "Latitude",
caption = "Source: Class A eyewitness testimony, BFRO database")
gganimate(final_map)
#
#devtools::install_github("dkahle/ggmap")
#devtools::install_github("thomasp85/gganimate@v0.1.1")
library(ggmap)
library(ggplot2)
library(gganimate)
library(gifski)
library(data.table)
library(sqldf)
library(lubridate)
register_google(key = "AIzaSyBQfWhxyD_6AUFnFoGRStFKJA4Hg_I2LbU")
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw_map <- get_map(location = c(lon = mean(raw$longitude),
lat = mean(raw$latitude)),
zoom = 4,
maptype = "satellite",
scale = "auto")
#
# ggmap(raw_map) +
#   geom_point(data=raw,
#              aes(raw$longitude,
#                  raw$latitude,
#                  color = factor(raw$classification)),
#              size = 0.3,
#              alpha = 0.5)
raw$year <- year(raw$date)
avgs <- sqldf("
SELECT
AVG(longitude) AS long,
AVG(latitude) AS lat,
year
FROM
raw
WHERE year > 1900 AND
classification = 'Class A'
GROUP BY year
")
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location: ",
x = "Longitude", y = "Latitude",
caption = "Source: Class A eyewitness testimony, BFRO database")
gganimate(final_map)
#
#devtools::install_github("dkahle/ggmap")
#devtools::install_github("thomasp85/gganimate@v0.1.1")
library(ggmap)
library(ggplot2)
library(gganimate)
library(gifski)
library(data.table)
library(sqldf)
library(lubridate)
register_google(key = "AIzaSyBQfWhxyD_6AUFnFoGRStFKJA4Hg_I2LbU")
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw_map <- get_map(location = c(lon = mean(raw$longitude),
lat = mean(raw$latitude)),
zoom = 4,
maptype = "satellite",
scale = "auto")
#
# ggmap(raw_map) +
#   geom_point(data=raw,
#              aes(raw$longitude,
#                  raw$latitude,
#                  color = factor(raw$classification)),
#              size = 0.3,
#              alpha = 0.5)
raw$year <- year(raw$date)
avgs <- sqldf("
SELECT
AVG(longitude) AS long,
AVG(latitude) AS lat,
year
FROM
raw
WHERE year > 1900 AND
classification = 'Class A'
GROUP BY year
")
final_map <- ggmap(raw_map) +
theme(text = element_text(size = 17)) +
geom_path(data = avgs,
mapping = aes(x = long,
y = lat,
color = year,
frame = avgs$year,
cumulative = T),
size = 1.5,
alpha = 0.7) +
scale_color_continuous(name = "Year",
low = "pink",
high = "green") +
labs(title = "Bigfoot's average location: ",
x = "Longitude", y = "Latitude",
caption = "Source: Class A eyewitness testimony, BFRO database")
gganimate(final_map)
#
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
nrow(raw)
avgs
avgs <- sqldf("
SELECT
AVG(longitude) AS long,
AVG(latitude) AS lat,
year
FROM
raw
--WHERE year > 1900 AND
--classification = 'Class A'
GROUP BY year
")
avgs
raw$year <- year(raw$date)
avgs <- sqldf("
SELECT
AVG(longitude) AS long,
AVG(latitude) AS lat,
year
FROM
raw
--WHERE year > 1900 AND
--classification = 'Class A'
GROUP BY year
")
raw$date
min(raw$date)
table(raw$date)
table(raw$season)
year(raw$date)
month(raw$date)
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw$year <- year(raw$date)
raw$month <- month(raw$date)
table(raw$month)
ggmap(raw_map) +
geom_point(data=raw,
aes(raw$longitude,
raw$latitude,
color = factor(raw$classification)),
size = 0.3,
alpha = 0.5)
ggmap(raw_map) +
geom_point(data=raw,
aes(raw$longitude,
raw$latitude,
color = factor(raw$classification)),
size = 0.3,
alpha = 0.5)
#devtools::install_github("dkahle/ggmap")
#devtools::install_github("thomasp85/gganimate@v0.1.1")
library(ggmap)
library(ggplot2)
library(gganimate)
library(gifski)
library(data.table)
library(sqldf)
library(lubridate)
register_google(key = "AIzaSyBQfWhxyD_6AUFnFoGRStFKJA4Hg_I2LbU")
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw_map <- get_map(location = c(lon = mean(raw$longitude),
lat = mean(raw$latitude)),
zoom = 4,
maptype = "satellite",
scale = "auto")
#
ggmap(raw_map) +
geom_point(data=raw,
aes(raw$longitude,
raw$latitude,
color = factor(raw$classification)),
size = 0.3,
alpha = 0.5)
#devtools::install_github("dkahle/ggmap")
#devtools::install_github("thomasp85/gganimate@v0.1.1")
library(ggmap)
library(ggplot2)
library(gganimate)
library(gifski)
library(data.table)
library(sqldf)
library(lubridate)
register_google(key = "AIzaSyBQfWhxyD_6AUFnFoGRStFKJA4Hg_I2LbU")
raw <- fread("bigfoot/data/bfro_reports_geocoded.csv")
raw <- raw[complete.cases(raw[ , 7:8]),]
#raw <- raw[-c("latitude", "longtiude"), with = FALSE]
raw_map <- get_map(location = c(lon = mean(raw$longitude),
lat = mean(raw$latitude)),
zoom = 4,
maptype = "satellite",
scale = "auto")
#
ggmap(raw_map) +
geom_point(data=raw,
aes(raw$longitude,
raw$latitude,
color = factor(raw$classification)),
size = 0.3,
alpha = 0.5) +
scale_color_discrete(name = "Class") +
labs(title = "Bigfoot geographic distribution",
x = "Longitude", y = "Latitude",
caption = "Source: BFRO database")
bigrace <- data.frame(identifier = c("black", "brown", "white", "indian", "asian", "chinese", "japanese", "latinx"),
number_of_mentions = c(1012, 943, 450, 277, 6, 4, 3, 0) )
bigrace
ggplot(bigrace,
aes(x = identifier,
y = number_of_mentions)) +
geom_bar()
ggplot(bigrace,
aes(x = identifier,
y = number_of_mentions)) +
geom_bar(stat = "identity")
ggplot(bigrace,
aes(-reorder(identifier, number_of_mentions),
y = number_of_mentions)) +
geom_bar(stat = "identity")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions)) +
geom_bar(stat = "identity")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
color = number_of_mentions)) +
geom_bar(stat = "identity")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_color_continuous(low = "purple", high = "yellow")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_fill_continuous(low = "purple", high = "yellow")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_fill_continuous(name = "Great color scheme", low = "purple", high = "yellow")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_fill_continuous(name = "Great color scheme", low = "purple", high = "yellow") +
labs(title = "Words used in Bigfoot recountings",
caption = "Source: BFRO database (all classes)",
x = "Word", y = "Number of mentions")
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_fill_continuous(name = "Great color scheme", low = "purple", high = "yellow") +
labs(title = "Words used in Bigfoot recountings",
caption = "Source: BFRO database (all classes)",
x = "Word", y = "Number of mentions") +
theme(text = element_text(size=20))
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_fill_continuous(name = "Great color scheme", low = "purple", high = "yellow") +
labs(title = "Words used in Bigfoot recountings",
caption = "Source: BFRO database (all classes)",
x = "Word", y = "Number of mentions") +
theme(text = element_text(size=26))
ggplot(bigrace,
aes(reorder(identifier, -number_of_mentions),
y = number_of_mentions,
fill = number_of_mentions)) +
geom_bar(stat = "identity") +
scale_fill_continuous(name = "Great color scheme", low = "purple", high = "yellow") +
labs(title = "Words used in Bigfoot recountings",
caption = "Source: BFRO database (all classes)",
x = "Word", y = "Number of mentions") +
theme(text = element_text(size=26),
axis.text.x = element_text(angle=30, hjust=1))
getwd()
library(data.table)
#setwd("kennedy_project/dataset_sample/all_prime_awards_subawards_20191019201603118206/")
dt <- fread("all_contracts_prime_awards_1.csv")
dt
str(dt)
library(data.table)
setwd("kennedy_project/dataset_sample/all_prime_awards_subawards_20191019201603118206/")
dt <- fread("all_contracts_prime_awards_1.csv")
dt
str(dt)
colnames(dt)
